{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport axios from 'axios';\nfunction PdfViewer({\n  chapterId\n}) {\n  _s();\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const API_URL = process.env.REACT_APP_API_URL;\n  useEffect(function () {\n    if (chapterId) {\n      axios.get(`${API_URL}/pdf/${chapterId}`, {\n        responseType: 'blob'\n      }).then(function (response) {\n        setPdfBlob(response.data);\n      });\n    }\n  }, [chapterId]);\n  if (!pdfBlob) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Document, {\n    file: URL.createObjectURL(pdfBlob)\n  }, /*#__PURE__*/React.createElement(Page, {\n    pageNumber: 1\n  }));\n}\n_s(PdfViewer, \"Fc73xQ3aEoYdd1OJDMjuSvQSkyY=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useEffect","useState","Document","Page","axios","PdfViewer","chapterId","_s","pdfBlob","setPdfBlob","API_URL","process","env","REACT_APP_API_URL","get","responseType","then","response","data","createElement","file","URL","createObjectURL","pageNumber","_c","$RefreshReg$"],"sources":["/Users/bsuravar/github/ncert-smart-viewer/client/src/components/PdfViewer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport axios from 'axios';\n\nfunction PdfViewer({ chapterId }) {\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const API_URL = process.env.REACT_APP_API_URL;\n\n  useEffect(function () {\n    if (chapterId) {\n      axios.get(`${API_URL}/pdf/${chapterId}`, { responseType: 'blob' }).then(function (response) {\n        setPdfBlob(response.data);\n      });\n    }\n  }, [chapterId]);\n\n  if (!pdfBlob) {\n    return null;\n  }\n\n  return React.createElement(\n    Document,\n    { file: URL.createObjectURL(pdfBlob) },\n    React.createElement(Page, { pageNumber: 1 })\n  );\n}\n\nexport default PdfViewer;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,SAASA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMS,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE7Cb,SAAS,CAAC,YAAY;IACpB,IAAIM,SAAS,EAAE;MACbF,KAAK,CAACU,GAAG,CAAC,GAAGJ,OAAO,QAAQJ,SAAS,EAAE,EAAE;QAAES,YAAY,EAAE;MAAO,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,QAAQ,EAAE;QAC1FR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAAC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEf,IAAI,CAACE,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,oBAAOT,KAAK,CAACoB,aAAa,CACxBjB,QAAQ,EACR;IAAEkB,IAAI,EAAEC,GAAG,CAACC,eAAe,CAACd,OAAO;EAAE,CAAC,eACtCT,KAAK,CAACoB,aAAa,CAAChB,IAAI,EAAE;IAAEoB,UAAU,EAAE;EAAE,CAAC,CAC7C,CAAC;AACH;AAAChB,EAAA,CArBQF,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAuBlB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}