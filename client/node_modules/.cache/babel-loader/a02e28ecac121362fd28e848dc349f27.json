{"ast":null,"code":"var _jsxFileName = \"/Users/bsuravar/github/ncert-smart-viewer/client/src/components/PdfViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport axios from 'axios';\n\n// Set the workerSrc to load the PDF.js worker\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nfunction PdfViewer({\n  chapterId\n}) {\n  _s();\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [pageWidth, setPageWidth] = useState(0);\n  const containerRef = useRef(null);\n  const API_URL = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    // Adjust the width of the PDF to fit the container\n    if (containerRef.current) {\n      setPageWidth(containerRef.current.offsetWidth);\n    }\n\n    // Fetch the PDF when the chapterId is available\n    if (chapterId) {\n      axios.get(`${API_URL}/chapters/pdf/${chapterId}`, {\n        responseType: 'blob'\n      }).then(response => {\n        setPdfBlob(response.data);\n      }).catch(error => {\n        console.error(\"Error fetching PDF:\", error);\n      });\n    }\n\n    // Update width on window resize\n    const handleResize = () => {\n      if (containerRef.current) {\n        setPageWidth(containerRef.current.offsetWidth);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [chapterId, API_URL]);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  if (!pdfBlob) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading PDF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: URL.createObjectURL(pdfBlob) // Create object URL from the blob\n      ,\n      onLoadSuccess: onDocumentLoadSuccess,\n      onLoadError: console.error // Handle error if there's an issue loading\n      ,\n      children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: index + 1,\n        width: pageWidth // Set the page width to fit the container\n      }, `page_${index + 1}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfViewer, \"rX+QVZ1MX64Fk8cIv+hece2PVdc=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Document","Page","pdfjs","axios","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PdfViewer","chapterId","_s","pdfBlob","setPdfBlob","numPages","setNumPages","pageWidth","setPageWidth","containerRef","API_URL","process","env","REACT_APP_API_URL","current","offsetWidth","get","responseType","then","response","data","catch","error","console","handleResize","window","addEventListener","removeEventListener","onDocumentLoadSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","file","URL","createObjectURL","onLoadSuccess","onLoadError","Array","from","el","index","pageNumber","_c","$RefreshReg$"],"sources":["/Users/bsuravar/github/ncert-smart-viewer/client/src/components/PdfViewer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport axios from 'axios';\n\n// Set the workerSrc to load the PDF.js worker\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nfunction PdfViewer({ chapterId }) {\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [pageWidth, setPageWidth] = useState(0);\n  const containerRef = useRef(null);\n  const API_URL = process.env.REACT_APP_API_URL;\n\n  useEffect(() => {\n    // Adjust the width of the PDF to fit the container\n    if (containerRef.current) {\n      setPageWidth(containerRef.current.offsetWidth);\n    }\n\n    // Fetch the PDF when the chapterId is available\n    if (chapterId) {\n      axios\n        .get(`${API_URL}/chapters/pdf/${chapterId}`, { responseType: 'blob' })\n        .then((response) => {\n          setPdfBlob(response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching PDF:\", error);\n        });\n    }\n\n    // Update width on window resize\n    const handleResize = () => {\n      if (containerRef.current) {\n        setPageWidth(containerRef.current.offsetWidth);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [chapterId, API_URL]);\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setNumPages(numPages);\n  };\n\n  if (!pdfBlob) {\n    return <div>Loading PDF...</div>;\n  }\n\n  return (\n    <div ref={containerRef} style={{ width: '100%' }}>\n      <Document\n        file={URL.createObjectURL(pdfBlob)} // Create object URL from the blob\n        onLoadSuccess={onDocumentLoadSuccess}\n        onLoadError={console.error} // Handle error if there's an issue loading\n      >\n        {/* Render each page */}\n        {Array.from(new Array(numPages), (el, index) => (\n          <Page\n            key={`page_${index + 1}`}\n            pageNumber={index + 1}\n            width={pageWidth} // Set the page width to fit the container\n          />\n        ))}\n      </Document>\n    </div>\n  );\n}\n\nexport default PdfViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}